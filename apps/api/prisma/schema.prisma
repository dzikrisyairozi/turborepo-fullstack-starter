// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "linux-musl-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// ============================================================================
// EXAMPLE MODELS
// ============================================================================
// These are example models to get you started. Feel free to modify or remove
// them according to your application's needs.

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  name      String?
  role      Role     @default(USER)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relations
  posts Post[]

  @@map("users")
}

model Post {
  id        String   @id @default(cuid())
  title     String
  content   String?
  published Boolean  @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relations
  author   User   @relation(fields: [authorId], references: [id], onDelete: Cascade)
  authorId String

  @@map("posts")
}

enum Role {
  USER
  ADMIN
}

// ============================================================================
// ADD YOUR MODELS BELOW
// ============================================================================
// Add your custom models here. Follow Prisma naming conventions:
// - Model names: PascalCase (e.g., UserProfile, BlogPost)
// - Field names: camelCase (e.g., firstName, isActive)
// - Table names: snake_case using @@map directive (e.g., @@map("user_profiles"))

// Example:
// model YourModel {
//   id        String   @id @default(cuid())
//   name      String
//   createdAt DateTime @default(now())
//   updatedAt DateTime @updatedAt
//
//   @@map("your_models")
// }
